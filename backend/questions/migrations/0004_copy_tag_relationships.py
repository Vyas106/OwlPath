# Generated by Django 5.1.5 on 2025-07-12 10:04

from django.db import migrations


def copy_tag_relationships(apps, schema_editor):
    """Copy existing tag relationships to the new QuestionTag through model"""
    Question = apps.get_model("questions", "Question")
    QuestionTag = apps.get_model("questions", "QuestionTag")

    # Get all questions with their tags
    for question in Question.objects.prefetch_related("tags").all():
        for tag in question.tags.all():
            # Create QuestionTag entry if it doesn't exist
            QuestionTag.objects.get_or_create(
                question=question,
                tag=tag,
                defaults={
                    "added_by": question.author,
                    "relevance_score": 1.0,
                },
            )


def reverse_copy_tag_relationships(apps, schema_editor):
    """Reverse operation - copy from QuestionTag back to direct M2M"""
    Question = apps.get_model("questions", "Question")
    QuestionTag = apps.get_model("questions", "QuestionTag")

    # Clear existing M2M relationships
    for question in Question.objects.all():
        question.tags.clear()

    # Copy from QuestionTag back to M2M
    for question_tag in QuestionTag.objects.all():
        question_tag.question.tags.add(question_tag.tag)


class Migration(migrations.Migration):

    dependencies = [
        ("questions", "0003_create_questiontag"),
    ]

    operations = [
        migrations.RunPython(copy_tag_relationships, reverse_copy_tag_relationships),
    ]
